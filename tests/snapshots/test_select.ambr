# serializer version: 1
# name: test_setup_select_modbus_tcp[mock_modbus_tcp_client0][select.test_entry_xtherma_modbus_config_operating_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'standby',
        'heating',
        'cooling',
        'water',
        'auto',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.test_entry_xtherma_modbus_config_operating_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:cogs',
    'original_name': 'Operating mode',
    'platform': 'xtherma_fp',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': '002',
    'unique_id': 'test_entry_xtherma-002',
    'unit_of_measurement': None,
  })
# ---
# name: test_setup_select_modbus_tcp[mock_modbus_tcp_client0][select.test_entry_xtherma_modbus_config_operating_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'test_entry_xtherma_modbus_config Operating mode',
      'icon': 'mdi:brightness-auto',
      'options': list([
        'standby',
        'heating',
        'cooling',
        'water',
        'auto',
      ]),
      'parameter': '002',
    }),
    'context': <ANY>,
    'entity_id': 'select.test_entry_xtherma_modbus_config_operating_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'auto',
  })
# ---
# name: test_setup_select_modbus_tcp[mock_modbus_tcp_client0][select.test_entry_xtherma_modbus_config_sg_ready_request-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'off',
        'normal',
        'block',
        'raise',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.test_entry_xtherma_modbus_config_sg_ready_request',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:cogs',
    'original_name': 'SG-Ready request',
    'platform': 'xtherma_fp',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': '808',
    'unique_id': 'test_entry_xtherma-808',
    'unit_of_measurement': None,
  })
# ---
# name: test_setup_select_modbus_tcp[mock_modbus_tcp_client0][select.test_entry_xtherma_modbus_config_sg_ready_request-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'test_entry_xtherma_modbus_config SG-Ready request',
      'icon': 'mdi:cancel',
      'options': list([
        'off',
        'normal',
        'block',
        'raise',
      ]),
      'parameter': '808',
    }),
    'context': <ANY>,
    'entity_id': 'select.test_entry_xtherma_modbus_config_sg_ready_request',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_setup_select_rest_api[mock_rest_api_client0][select.test_entry_xtherma_config_operating_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'standby',
        'heating',
        'cooling',
        'water',
        'auto',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.test_entry_xtherma_config_operating_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:cogs',
    'original_name': 'Operating mode',
    'platform': 'xtherma_fp',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': '002',
    'unique_id': 'test_entry_xtherma-002',
    'unit_of_measurement': None,
  })
# ---
# name: test_setup_select_rest_api[mock_rest_api_client0][select.test_entry_xtherma_config_operating_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'test_entry_xtherma_config Operating mode',
      'icon': 'mdi:brightness-auto',
      'options': list([
        'standby',
        'heating',
        'cooling',
        'water',
        'auto',
      ]),
      'parameter': '002',
    }),
    'context': <ANY>,
    'entity_id': 'select.test_entry_xtherma_config_operating_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'auto',
  })
# ---
# name: test_setup_select_rest_api[mock_rest_api_client0][select.test_entry_xtherma_config_sg_ready_request-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'off',
        'normal',
        'block',
        'raise',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.test_entry_xtherma_config_sg_ready_request',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:cogs',
    'original_name': 'SG-Ready request',
    'platform': 'xtherma_fp',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': '808',
    'unique_id': 'test_entry_xtherma-808',
    'unit_of_measurement': None,
  })
# ---
# name: test_setup_select_rest_api[mock_rest_api_client0][select.test_entry_xtherma_config_sg_ready_request-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'test_entry_xtherma_config SG-Ready request',
      'icon': 'mdi:cancel',
      'options': list([
        'off',
        'normal',
        'block',
        'raise',
      ]),
      'parameter': '808',
    }),
    'context': <ANY>,
    'entity_id': 'select.test_entry_xtherma_config_sg_ready_request',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
